import SwiftUI


struct SampleMNISTView: View {
    @State var data = MNISTData(label: 4, image: Matrix.random(rows: 28, columns: 28, min: 0.0, max: 300.0))

    var body: some View {
        VStack(spacing: 8) {
            Button {
                data = MNISTData(label: 4, image: Matrix.random(rows: 28, columns: 28, min: 0.0, max: 300.0))
                print(data)
            } label: {Text("Label: \(data.label)")
                .font(.title)
            }

            HStack(spacing: 0) {
                ForEach(0..<data.image.rows, id: \.self) { i in
                    VStack(spacing: 0) {
                        ForEach(0..<data.image.columns, id: \.self) { j in
                            Rectangle()
                                .fill(Color(data.image.data.map { value in
                                    // Create a UIColor instance from the pixel intensity value
                                    let uiColor = NSColor(white: CGFloat(value / 300.0), alpha: 1.0)
                                    // Get the CGColor representation of the UIColor instance
                                    return uiColor.cgColor
                                }[i * data.image.columns + j]))
                                .frame(width: 8, height: 8)
                        }
                    }
                }
            }
        }
    }
}
